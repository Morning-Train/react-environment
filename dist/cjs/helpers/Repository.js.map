{"version":3,"file":"Repository.js","sources":["../../../src/helpers/Repository.js"],"sourcesContent":["import get from 'lodash/get';\nimport set from 'lodash/set';\nimport forEach from \"lodash/forEach\"\nimport isArray from \"lodash/isArray\"\nimport isPlainObject from \"lodash/isPlainObject\"\nimport uniqueId from \"lodash/uniqueId\"\nimport setWith from 'lodash/setWith'\nimport mergeWith from 'lodash/mergeWith'\n\nexport default class Repository {\n\n    constructor(data = {}) {\n        this.data = data;\n    }\n\n    transform(query, callback) {\n\n        let value = this.get(query);\n\n        if(typeof callback === \"function\") {\n            value = callback(value);\n        }\n\n        this.set(query, value);\n    }\n\n    get(query, defaultValue = null) {\n        if (arguments.length === 0) {\n            return this.data;\n        }\n\n        return get(this.data, query, defaultValue);\n    }\n\n    set(query, value) {\n        // Check if query is an object\n        if (typeof query === \"object\") {\n            this.data = query;\n            return this;\n        }\n\n        set(this.data, query, value);\n\n        this.triggerObserveCallbacks(query);\n\n        return this;\n    }\n\n    remove(query) {\n        let parts = query.split(\".\");\n        let key = parts.pop();\n        let parentQuery = parts.join(\".\");\n        let target = parts.length === 0 ? this.get() : this.get(parentQuery);\n\n        if (target && (typeof target === \"object\")) {\n            delete target[key];\n        }\n\n        this.triggerObserveCallbacks(query);\n\n        return this;\n    }\n\n    has(query) {\n        return this.get(query) != undefined;\n    }\n\n    empty() {\n        this.data = {};\n        return this;\n    }\n\n    isEmpty() {\n        return Object.keys(this.data) === 0;\n    }\n\n    keys() {\n        return Object.keys(this.data);\n    }\n\n    entries() {\n        return Object.values(this.data);\n    }\n\n    each(callback) {\n\n        if(typeof(callback) !== \"function\") {\n            return;\n        }\n\n        if(this.isEmpty()) {\n            return;\n        }\n\n        return this.entries().map(entry => callback(entry));\n    }\n\n    _observeCallbacks = {};\n    _observedPathsTree = {};\n\n    observe(path, callback) {\n        if (typeof this._observeCallbacks[path] === 'undefined') {\n            this._observeCallbacks[path] = {};\n        }\n\n        const uuid = uniqueId()\n\n        const disposer = () => {\n            this.removeObserveListener(path, callback);\n        }\n\n        this._observeCallbacks[path][uuid] = callback;\n\n        mergeWith(\n          this._observedPathsTree,\n          setWith({}, path, {}, Object)\n        )\n\n        return disposer;\n    }\n\n    triggerObserveCallbacks(path) {\n        return new Promise(resolve => {\n\n            const promises = []\n\n            /// Trigger for direct match\n            promises.push(\n              this.triggerObserveCallbacksForPath(path)\n            )\n\n            /// Trigger for children\n            const childObservers = get(this._observedPathsTree, path)\n            if(childObservers) {\n                const flattenedChildObservers = this._flattenObject(childObservers)\n                Object.keys(flattenedChildObservers).forEach(pathFragment => {\n                    promises.push(\n                      this.triggerObserveCallbacksForPath(path + '.' + pathFragment)\n                    )\n                })\n            }\n\n            /// Trigger for direct parents\n            const pathFragments = path.split('.')\n            pathFragments.pop()\n\n            while(pathFragments.length > 0) {\n                promises.push(\n                  this.triggerObserveCallbacksForPath(pathFragments.join('.'))\n                )\n                pathFragments.pop()\n            }\n\n            Promise.all(promises).then(() => {\n                resolve()\n            })\n        })\n    }\n\n    triggerObserveCallbacksForPath(path) {\n        return new Promise(resolve => {\n\n            const callbacksObject = this._observeCallbacks[path];\n\n            if(!callbacksObject) {\n                resolve()\n                return\n            }\n\n            const keys = Object.keys(callbacksObject)\n\n            if (typeof keys !== 'undefined' && keys.length > 0) {\n                keys.forEach(key => {\n\n                    const trigger = () => {\n\n                        if(typeof this._observeCallbacks[path] === 'object' && typeof this._observeCallbacks[path][key] === 'function') {\n                            this._observeCallbacks[path][key]()\n                        }\n\n                        resolve()\n                    }\n\n                    if(typeof requestIdleCallback === 'function') {\n                        requestIdleCallback(() => {\n                            trigger();\n                        })\n                    } else {\n                        trigger();\n                    }\n                })\n            }\n\n        })\n\n    }\n\n    removeObserveListener(path, callback) {\n\n        if(typeof this._observeCallbacks[path] === 'undefined') {\n            return;\n        }\n\n        const keys = Object.keys(this._observeCallbacks[path])\n\n        if(keys.length === 0) {\n            return;\n        }\n\n        keys.forEach((key) => {\n            if (this._observeCallbacks[path][key] === callback) {\n                delete this._observeCallbacks[path][key];\n            }\n        });\n    }\n\n    _flattenObject(obj = {}) {\n        const result = {};\n\n        const flatten = (collection, prefix = '', suffix = '') => {\n            forEach(collection, (value, key) => {\n                const path = `${prefix}${key}${suffix}`;\n\n                if (isArray(value)) {\n                    flatten(value, `${path}[`, ']');\n                } else if (isPlainObject(value) && Object.keys(value).length > 0) {\n                    flatten(value, `${path}.`);\n                }\n\n                result[path] = value;\n            });\n        };\n\n        flatten(obj);\n\n        return result;\n    }\n\n}\n"],"names":["Repository","data","_classCallCheck","_observeCallbacks","_observedPathsTree","query","callback","value","get","set","defaultValue","arguments","length","_typeof","triggerObserveCallbacks","parts","split","key","pop","parentQuery","join","target","undefined","Object","keys","values","isEmpty","entries","map","entry","path","uuid","uniqueId","disposer","removeObserveListener","mergeWith","setWith","Promise","resolve","promises","push","triggerObserveCallbacksForPath","childObservers","flattenedChildObservers","_flattenObject","forEach","pathFragment","pathFragments","all","then","callbacksObject","trigger","requestIdleCallback","obj","result","flatten","collection","prefix","suffix","isArray","isPlainObject"],"mappings":"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"}